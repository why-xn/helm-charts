apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kafka.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "kafka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kafka.labels" . | nindent 8 }}
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:3.4.1
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: controller,broker
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: 0@localhost:9093
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
          ports:
            - name: broker
              containerPort: 9092
              protocol: TCP
            - name: controller
              containerPort: 9093
              protocol: TCP
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 512Mi
          livenessProbe:
            initialDelaySeconds: 60
            failureThreshold: 5
            tcpSocket:
              port: 9092
          readinessProbe:
            initialDelaySeconds: 30
            failureThreshold: 5
            tcpSocket:
              port: 9092
  volumeClaimTemplates:
    - metadata:
        name: {{ include "kafka.fullname" . }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "{{.Values.config.storageClass}}"
        resources:
          requests:
            storage: {{.Values.config.storageSize}}

